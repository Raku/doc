#!/usr/bin/env raku

use Test;
use RakuDoc::Test::Files;
use File::Temp;

=begin overview

For all raku docs, compare output from RAKUAST and old --doc ignoring whitespace diffs.

To see the changes between current and new rendering as a diff, run as:

    RAKUDO_AST_DOCS=v xt/rakuast-compare.rakutest

And optionally specify a single file to restrict the output.

To perform a strict check respecting whitespace:

    RAKUDO_AST_WS=1 xt/rakuast-compare.rakutest

=end overview

my @files = RakuDoc::Test::Files.pods;
plan +@files;

for @files -> $file {

    %*ENV<RAKUDO_RAKUAST>="";
    my $old = "";
    my $job = Proc::Async.new($*EXECUTABLE-NAME, '--doc', $file);
    $job.stdout.tap(-> $buf {$old ~= $buf});
    $job.stderr.tap({;});

    my $has-error = ! await $job.start;
    if $has-error {
       flunk "Error occurred caching $file old school";
       next;
    }

    %*ENV<RAKUDO_RAKUAST>="1";
    my $new = "";
    $job = Proc::Async.new($*EXECUTABLE-NAME, '--doc', $file);
    $job.stdout.tap(-> $buf {$new ~= $buf});
    $job.stderr.tap({;});

    $has-error = ! await $job.start;
    if $has-error {
        flunk "Error occurred caching $file new school";
        next;
    }

    unless %*ENV<RAKUDO_AST_WS> {
        # Ignore space differences
        $old ~~ s:g/ ' '+ / /;
        $new ~~ s:g/ ' '+ / /;

        # Ignore blank lines
        $old ~~ s:g/ ^^ $$ . //;
        $new ~~ s:g/ ^^ $$ . //;

    }
    ok $old eq $new, "$file contents match";
    if %*ENV<RAKUDO_AST_DOCS>:exists && %*ENV<RAKUDO_AST_DOCS> eq "v" {
        my ($old_fname, $old_io) = tempfile;
        $old_io.spurt: $old, :close;
        my ($new_fname, $new_io) = tempfile;
        $new_io.spurt: $new, :close;
        if %*ENV<RAKUDO_AST_WS> {
            run('diff', '-u', $old_fname, $new_fname);
        } else {
            run('diff', '-u', '-w', $old_fname, $new_fname);
        }
    }
}
