=begin pod :tag<perl6> :page-order<a51>

=TITLE Routines

=SUBTITLE Common Perl 6 routines that are defined outside any class

See L<Sub> on how to define routines and work with them.

=head1 Control routines

Routines that change the flow of the program, maybe returning a value.

=head2 sub exit

Defined as:

    sub exit(Int() $status = 0)

Exits the current process with return code C<$status> or zero if no value has
been specified. The exit value (C<$status>), when different from zero, has to be
opportunely evaluated from the process that catches it (e.g., a shell).

C<exit> does prevent the L<LEAVE|/language/phasers#LEAVE> phaser to be executed.

C<exit> should be used as last resort only to signal the parent process about an
exit code different from zero, and should not be used to terminate exceptionally
a method or a sub: use  L<exceptions|/language/exceptions> instead.

It is worth noting that the only way to return an exit code different from zero
from a L<Main|/routine/MAIN> function is by means of using C<exit>.

=head2 X<done>

Defined as

    sub done(--> Nil)

If used outside any supply or react block, throws an exception C<done without
supply or react>. Within a L<Supply> block, it will indicate the supply will no
longer emit anything. See also L<documentation on method C<done>|/routine/done>.

=for code
my $supply = supply {
    for 1 .. 3 {
        emit($_);
    }
    done;
}
$supply.tap( -> $v { say "Second : $v" }, done => { say "No more" });
# OUTPUT: OUTPUT: «Second : 1␤Second : 2␤Second : 3␤No More␤»

The block passed to the C<done> named argument will be run when C<done> is
called within the C<supply> block.

=head2 X<emit>

Defined as

    sub emit(\value --> Nil)

If used outside any supply or react block, throws an exception C<emit without
supply or react>. Within a L<Supply> block, it will add a message to the stream.

=begin code
my $supply = supply {
  for 1 .. 10 {
      emit($_);
  }
}
$supply.tap( -> $v { say "First : $v" });
=end code

See also L<the page for C<emit> methods|/routine/emit>.


=end pod

# vim: expandtab softtabstop=4 shiftwidth=4 ft=perl6
