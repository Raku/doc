=begin pod

=TITLE About the Docs

=SUBTITLE Documentation for the Perl 6 Documentation Project

This documentation is an attempt to document the Perl 6 programming
language with the goals of being comprehensive, easy to use, easy to
navigate, and useful to both newcomers and experienced Perl 6
programmers.

An HTML version of the documentation is located online at
L<https://doc.perl6.org>.

The official source for this documentation is located at L<perl6/doc on
GitHub|https://github.com/perl6/doc>.

=head1 Structure

All of the documentation is written in Pod6 and kept in the C<lib/>
directory, and the C<lib/Language/> and C<lib/Type/> sub-directories.
These files are processed as collections of definitions or
"documentables", which are then post-processed and linked together.

=head1 Generating an HTML version

Generating this documentation requires:

=item A recent version of the Rakudo Perl 6 compiler

=item The Perl 6 modules Pod::To::HTML and URI::Escape (can be installed
via L<panda|https://github.com/tadzik/panda>)

=item B<Optional>: L<GraphViz|http://graphviz.org>, for creating graphs
of the relationships between Perl 6 types

=item B<Optional>: L<Pygments|http://pygments.org>, for doing syntax
highlighting

Then, to generate the documentation into the C<html/> folder, run:

    perl6 htmlify.p6

Currently, to serve the generated documentation for your browser, Perl 5
with Mojolicious::Lite must be installed. Then run:

    perl app.pl daemon

=head1 Contributing

=head2 Adding definitions

Documentables can be defined using an C<=headN> Pod directive, where
C<N> is greater than one (e.g. C<=head1>, C<=head2>, C<=head3>, …).

All of the paragraphs and blocks following that directive, up until the
next directive of the same level, will be considered part of the
documentable. So, in:

=begin code :allow<R>
=head2 R<My Definition>

Some paragraphs, followed by some code:

    my Code $examples = "amazing";

Mind === blown.

=head3 Minor details about R<My Definition>

It's fantastic.

=head2 And now, for something completely different

…

=end code

The documentable R<My Definition> extends down to the C<=head2 And now…>.

Documentables may contain other documentables. Class documentables, for
example, often contain the methods the class implements.

Definitions must be in one of the following forms to be recognized as
the start of a documentable named, say, Z:

=item C<X<How to use the Z infix | infix,Z>> (This a special case, which
is always considered a definition)
=item C<The Z Infix>
=item C<The C<Z> Infix>
=item C<Infix Z>
=item C<Infix C<Z>>
=item C<trait is cached> (A special case for the L<trait|/language/functions#Traits> documentables)

=end pod
