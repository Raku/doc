=begin pod :kind("Language") :subkind("Language") :category("tutorial")

=TITLE Making Modules: An Introduction

=SUBTITLE Understanding Modules

Here we need to distinguish between four things:

=item A Distribution
=item A C<package>
=item A C<module>
=item A C<class>/C<grammar>

=head2 Distribution

A Distribution is a set of related source files that are distributed together.
This usually includes some modules, some tests, and maybe some other resources.

For a full explanation, see
L<Distributions: An introduction|/language/distributions/introduction>
and the following documentation.

=head2 C<package>

Packages are nested namespaces of named program elements. Modules, classes and
grammars are all types of package.

For a full explanation see L<Packages|/language/packages>.

=head2 C<module>

Modules are usually one or more source files that expose Raku constructs,
such as classes, roles, grammars, subroutines and variables. Modules are
usually used for distributing Raku code as libraries which can be used in
another Raku program.

For a full explanation see the pages linked from L<Using Modules: An Introduction|/language/using-modules/introduction>.

=head2 C<class>

Classes are a collection of methods and attributes grouped together for
convenience.  Being a package, they're also a nested namespace.

For further explanation, see:

=item The L<C<class> section|/language/typesystem#class> of the Type system fundamentals
=item The L<Classes and objects|/language/classtut> tutorial

=head2 C<grammar>

Grammars are a specific type of class intended for parsing text. Grammars are
composed of rules, tokens and regexes which are actually methods, since grammars
are classes.

For a full explanation see L<Grammars|/language/grammars>.

=head1 Creating and using modules

A module is usually a source file or set of source files that expose Raku
constructs N<Technically a module is a set of I<compunits> which are usually
files but could come from anywhere as long as there is a I<compunit repository>
that can provide it. See L<S11|https://github.com/Raku/old-design-docs/blob/master/S11-modules.pod>.>.

Modules are typically packages (L<classes|/language/objects#Classes>,
L<roles|/language/objects#Roles>, L<grammars|/type/Grammar>),
L<subroutines|/language/functions>, and sometimes
L<variables|/language/variables>. In Raku I<module> can also refer to a type of
package declared with the C<module> keyword (see L<Module
Packages|/language/module-packages> and the examples below) but here we mostly
mean "module" as a set of source files in a namespace.


=end pod
