=begin pod :kind("Language") :subkind("Modules") :category("tutorial")

=TITLE Using Modules: Finding and Installing

=SUBTITLE How to find and install Raku modules

=head1 Finding a module for your needs

=head2 Quick Search

The quick way to find modules from the command line is by using C<zef search>:

=for code :lang<shell>
zef search WWW

will return a list of modules that includes WWW in their name, for
instance.

=head2 Powerful Search

Modules are listed in L<the Raku ecosystem|https://raku.land> and can be
searched there.  This is particularly useful when the quick search
doesn't come up with exactly one hit.

=head1 Installing the module

L<C<zef>|https://github.com/ugexe/zef> is the application used for installing
modules in Raku.

=for code :lang<shell>
zef install WWW

will install the module with that particular name, if it is not already
installed N<If it's installed, it will reinstall only if the version of
the module is newer than the one installed>.

=head1 Finding installed modules

It is up to the module installer to know where C<compunit> expects modules to be
placed. There will be a location provided by the
L<distribution|/routine/distribution> and in the current home directory. In
any case, letting the module installer deal with your modules is a safe bet.

=begin code :lang<shell>
cd your-module-dir
zef --force install .
=end code

X<|Syntax,use lib>
A user may have a collection of modules not found in the normal ecosystem,
maintained by a module or package manager, but needed regularly.  Instead of
using the C<use lib> L<pragma|/language/pragmas#lib> one
can use the C<RAKULIB> environment variable to point to module locations.
For example:

=for code :lang<shell>
export RAKULIB=/path/to/my-modules,/path/to/more/modules

Note that the comma (',') is used as the directory separator.

The directories in the C<RAKULIB> path will be searched for modules when
Raku C<need>s, C<use>s or C<require>s them. Directories that start with a
dot are ignored and symlinks are followed.

To avoid performance penalties at module load time, you may need to ensure
that directories added to this path are not too large; see
L<here|/language/traps#Filesystem_repositories> for more information.

=end pod
