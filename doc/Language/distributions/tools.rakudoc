=begin pod :kind("Language") :subkind("Modules") :category("tutorial")

=TITLE Distributions: The Tools

=SUBTITLE What can help you write/test/improve your distributions of modules

Here is a list of distributions that you can find in the Raku ecosystem
which aim to make the experience of developing Raku modules
more fun.

=head1 Distribution builder and authoring tools

Some distributions and tools to help you with generating files that are part
of a distribution of modules.

=item L<App::Mi6|https://raku.land/zef:skaji/App::Mi6>     Minimal authoring tool for Raku
=item L<META6|https://raku.land/zef:jonathanstowe/META6>        Do things with Raku C<META> files
=item L<rakudoc|https://raku.land/cpan:SOFTMOTH/rakudoc>        Generate documentation end-products

=head1 Distribution Testing Tools

=head2 Core Distributions

=item L«C<Test>|/type/Test»    Test routines (see L<tutorial|/language/testing>)

=head2 Non-Core Distributions

Some tests of module quality.

=item L<Test::META|https://raku.land/zef:jonathanstowe/Test::META>      Test your META6.json file
=item L<Test::Output|https://raku.land/zef:raku-community-modules/Test::Output>  Test the output to STDOUT and STDERR your program generates
=item L<Test::Screen|https://raku.land/github:skids/Proc::Screen>  Use B<GNU screen> to test full screen VT applications
=item L<Test::When|https://raku.land/zef:raku-community-modules/Test::When>  Control when your tests are run (author testing, online testing, etc.)

=head1 Sample distributions

Distributions that exist only as minimalist examples, tests for installers,
or skeletons.

=item L<Foo|https://raku.land/github:ugexe/Foo> A module with two distributions of different versions

See also L<Other Foo Modules|https://raku.land/?q=Foo>

=head1 Useful Core Modules

The Rakudo implementation has a few modules included you may want to use; please
note that the implementation is not part of the Raku specification and thus
might be subject to change without prior notice. The following is a list of
them, along with links to their source code.

X<|Modules,CompUnit (Rakudo classes)>
=head2 C<CompUnit::*> modules and roles

These modules are mostly used by distribution build tools, and are not intended
to be used (at least until version 6.c) by the final user.

=item L«C<CompUnit::Repository::Staging>|https://github.com/rakudo/rakudo/blob/main/lib/CompUnit/Repository/Staging.rakumod».
=item L<C<CompUnit::Repository::(FileSystem|Installation|AbsolutePath|Unknown|NQP|Perl6|RepositoryRegistry)>|https://github.com/rakudo/rakudo/blob/main/src/core.c/CompUnit/RepositoryRegistry.rakumod>.

=head2 Other modules

=item L«C<Pod::To::Text>|https://github.com/rakudo/rakudo/blob/main/lib/Pod/To/Text.rakumod»    Used by several external modules
=item L«C<experimental>|https://github.com/rakudo/rakudo/blob/main/lib/experimental.rakumod»
(L<documentation|/language/pragmas#experimental>)
=item L«C<newline>|https://github.com/rakudo/rakudo/blob/main/lib/newline.rakumod»

=head1 C<NativeCall> Assistance Tools

=head2 Core modules

=item L«C<NativeCall>|https://github.com/rakudo/rakudo/blob/main/lib/NativeCall.rakumod»    Native Calling Interface (L<docs|/language/nativecall>)
=item L«C<NativeCall::Types>|https://github.com/rakudo/rakudo/blob/main/lib/NativeCall/Types.rakumod»    Used by C<NativeCall>
=item L«C<NativeCall::Compiler::GNU>|https://github.com/rakudo/rakudo/blob/main/lib/NativeCall/Compiler/GNU.rakumod»    Used by C<NativeCall>
=item L«C<NativeCall::Compiler::MSVC>|https://github.com/rakudo/rakudo/blob/main/lib/NativeCall/Compiler/MSVC.rakumod»    Used by C<NativeCall>

=head2 Non-Core Modules

Here some modules to help you work with NativeCall (for calling non-Raku libraries).

=item L<NativeHelpers::Array|https://raku.land/zef:jonathanstowe/NativeHelpers::Array>  Provides routines to deal with CArray
=item L<App::GPTrixie|https://raku.land/github:Skarsnik/App::GPTrixie>                Generate NativeCall code from C headers file
=item L<NativeCall::TypeDiag|https://raku.land/github:Skarsnik/NativeCall::TypeDiag>  Provides routines to test your CStruct




=end pod
