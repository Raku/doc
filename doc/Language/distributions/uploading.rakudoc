=begin pod :kind("Language") :subkind("Language") :category("tutorial")

=TITLE Distributions: Uploading

=SUBTITLE How to upload your distribution to the ecosystem

If you've written a Raku module and would like to share it with the
community, we'd be delighted to have it listed in the
L<Raku modules directory|https://raku.land>. C<:)>

Currently, there are three ways to distribute a module. No matter which method
you choose, your module will be indexed on the L<raku.land|https://raku.land>
and L<raku.land|https://raku.land> websites. The three module
distribution networks, or ecosystems, are:

=item B<zef ecosystem> using the L<C<fez> module uploader|https://raku.land/zef:tony-o/fez>
utility. Use of the C<fez> command is
the newest and perhaps easiest way to distribute your module and is growing in
popularity.

=item B<CPAN>
This is the same ecosystem Perl is using. Modules are uploaded as I<.zip>
or I<.tar.gz> files on L<PAUSE|https://pause.perl.org/>.

=item B<p6c>
Up until recently the only ecosystem. It is based
on Github repositories which are directly accessed. It has only limited
capability for versioning.

The process of sharing your module consists of two steps, preparing the module,
and uploading the module to one of the ecosystems mentioned above.

More details on preparing your module can be found on the pages linked from
L<Distributions: An Introduction>.

=head2 Upload your module to zef ecosystem

If you want to use the I<zef> ecosystem then you need to register your username
using I<fez>.

=item Install fez if you haven't done so already

=begin code :lang<shell>
zef install fez
=end code

=item Register your user with zef's ecosystem

=begin code :lang<shell>
fez register
>>= Email: your@email.com
>>= Username: username
>>= Password:
>>= registration successful, requesting auth key
>>= login successful, you can now upload dists
=end code

=item Now you can upload your module!

Before doing the following, ensure your C<META6.json> file's C<auth> matches C«zef:<username>» and then:

=begin code :lang<shell>
fez upload
>>= Vortex::TotalPerspective:ver<0.1.2>:auth<zef:username> looks OK
>>= Hey! You did it! Your dist will be indexed shortly
=end code

=head3 Versioning and fez

=item To prevent changes to a versioned distribution (remember a distribution may contain more than
one module), only B<one> upload of a distribution per version is permitted. If a developer makes changes to
code in a repository, the changes will not be reflected in the C<fez> system. So changes to code must be
accompanied by a bump in the version number and the new version uploaded to C<fez>.

=head1 Upload your module to CPAN

A prerequisite for using CPAN is a L<PAUSE|https://pause.perl.org/>
user account. If you don't have an account already, you can create one
L<here|https://pause.perl.org/pause/query?ACTION=request_id>
The process takes about 5 minutes and some e-mail back and forth.

=begin item
Create a package of your module:

=begin code :lang<shell>
cd your-module-folder
tar czf Vortex-TotalPerspective-0.0.1.tar.gz \
  --transform s/^\./Vortex-TotalPerspective-0.0.1/ --exclude-vcs\
  --exclude=.[^/]*
=end code

If you use git you can also use the following command to create a package
directly for a given commit.

=begin code :lang<shell>
git archive --prefix=Vortex-TotalPerspective-0.0.1/ \
  -o ../Vortex-TotalPerspective-0.0.1.tar.gz HEAD
=end code

=end item

=item Go to L<PAUSE|https://pause.perl.org/>, log in and navigate to
C<Upload a file to CPAN>.

=item Make sure you select C<Perl6> as the I<Target Directory>. For
    your first upload, you have to enter the string C<Perl6> in the text field.
    On subsequent uploads, you can select the C<Perl6> directory from the
    selection box right below the input field.

=begin item
Select your file and click I<Upload>! If everything was fine with your
dist, you should see your module tar file in your C<Perl6> directory along
with both a C<META> and a C<README> file named after your module filename.

I<Make sure you have a META6.json file in your dist and that the dist
version you're uploading is higher than the currently uploaded version.
Those are the most common upload errors.>

=end item

=head2 Upload your module to p6c

The Raku community is migrating to the I<fez> ecosystem (see above). For developers
who have modules on the I<p6c> ecosystem and migrated them to I<fez>, please remove them
from the I<p6c> ecosystem. If you do not have the commit bit, open a pull request or ping someone on IRC
(#raku at libera.chat) to get help.

If you want to use the I<p6c> ecosystem you need to use git for your module's
version control. The instructions herein assume that you have a
L<GitHub|https://github.com> account so that your module can be shared from its
GitHub repository, however another provider such as
L<GitLab|https://about.gitlab.com/> should work as long as it works in a
similar way.

=item Put your project under git version control if you haven't done so
already.

=item Once you're happy with your project, create a repository for it on GitHub.
See L<GitHub's help docs|https://help.github.com/> if necessary. Your
GitHub repository should be named the same as your project directory. Immediately
after creating the GitHub repo, GitHub shows you how to configure your
local repository to know about your GitHub repository.

=item Push your project to GitHub.

=item Consider setting up automated testing.
One option is to use the github workflows functionality, and an example can be found for the
L<Mi6-Helper App|https://github.com/tbrowder/Mi6-Helper/blob/master/.github/workflows>.

=item Create a PR (Pull Request) on L<ecosystem|https://github.com/Raku/ecosystem> adding
your module to META.list, or ping someone on IRC (#raku at libera.chat) to
get help having it added.

=item After the pull request has been accepted, wait for an hour. If
your module doesn't show up on L<https://raku.land/>, please
view the log file to see if it identifies an error with your module or
C<meta> file.

B<That's it! Thanks for contributing to the Raku community!>

If you'd like to try out installing your module, use the X<zef|Reference,zef> module
installer tool which is included with Rakudo Star Raku:

=begin code :lang<shell>
zef install Vortex::TotalPerspective
=end code

This will download your module to its own working directory (C<~/.zef>),
build it there, and install the module into your local Raku installation
directory.

To use C<Vortex::TotalPerspective> from your scripts, just write
C<use Vortex::TotalPerspective>, and your Raku implementation will
know where to look for the module file(s).

=end pod

