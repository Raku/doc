=begin pod :kind("Language") :subkind("Language") :category("migration")

=TITLE Perl to Raku guide - overview

=SUBTITLE How do I do what I used to do?

These documents should not be mistaken for a beginner tutorial or a
promotional overview of Raku (née Perl 6); it is intended as a technical
reference for Raku learners with a strong Perl background and for anyone
porting Perl code to Raku.

=head1 Raku in a nutshell

L<Raku in a Nutshell|/language/5to6-nutshell> provides a quick overview of
things changed in syntax, operators, compound statements, regular expressions,
command-line flags, and various other bits and pieces.

=head1 Syntactic differences

The L<Syntax section|/language/5to6-perlsyn> provides an overview of the
syntactic differences between Perl and Raku: how it is still mostly
free form, additional ways to write comments, and how C<switch> is very
much a Raku thing.

=head1 Operators in Raku

The L<Operators section|/language/5to6-perlop> guides you from the operators
in L<Perl's perlop|https://metacpan.org/pod/distribution/perl/pod/perlop.pod>
to the equivalent in Raku.

=head1 Functions in Raku

The L<Functions section|/language/5to6-perlfunc> describes all of the Perl
functions and their Raku equivalent and any differences in behavior.  It
also provides references to ecosystem modules that provide the Perl behavior
of functions, either existing in Raku with slightly different semantics
(such as C<shift>), or non-existing in Raku (such as C<tie>).

=head1 Special variables in Raku

The L<Special Variables section|/language/5to6-perlvar> describes if and how
a lot of Perl's special (punctuation) variables are supported in Raku.

=begin comment

### Guidelines for contributions:

Headers should contain the text that a Perl user might search for, since
those headings will be in the Table of Contents generated for the top of
the document.

We use POD =item instead of =head3 or =head4 for unchanged bits that need
not appear in the table of contents.

This article does not describe the additions to syntax, nor details of
possible improvements. For example, C<0 + $string> still works, even though
we would write it as C<+$string> now. (Blue Tiger will offer a Perl
Modernization guide, with step-by-step procedures for translation, along
with details of new idioms and "better ways to do it")

Example code and links to other documents should be favored over long
explanations of details better found elsewhere.

Finally, if a real user asks a P5->P6 question not answered here, please
add it to the document, even if we don't have a good answer yet. That will
be better than losing the information about a real need.

=end comment

=end pod


# vim: expandtab softtabstop=4 shiftwidth=4 ft=perl6
