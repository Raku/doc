=begin pod :kind("Language") :subkind("Language") :category("tutorial")

=TITLE REPL

=SUBTITLE Read-eval-print loop

=head1 Overview

The C<REPL> is an interactive Raku prompt. Each line of code you enter in the C<REPL>
is executed, and if no output was generated, the value returned
by the expression is output.

=head1 Trap

B<Note>: Running code in the C<REPL> is not equivalent to saving the code in a file and
running that. Each line introduces a new scope which can confuse code that has multiple
lines. See C<sub repl()> below for a way to target a REPL inside a larger script.

=head1 non-interactive mode

If invoked from the command line with  C<raku --repl-mode=non-interactive>, no history or prompts
are printed, and the code is not executed until you close input (on Linux, for example, you can pipe
the code to it or press C<Control-d>.

=for code :lang<shell>
    $ echo "say 3" | raku --repl-mode=non-interactive
    3

=head1 sub repl()

This routine allows you to embed a REPL inside a larger script and have access to all
the variables in context.

See L<sub repl()|/type/independent-routines#sub_repl> in Independent Routines for more
information.

=head1 ENVIRONMENT Variables

See L<ENVIRONMENT Variables|/programs/03-environment-variables#Environment_variables_used_by_the_raku_command_line>.

=head2 Get command line history

In a fresh install, there is no command history. Running the C<REPL> in this mode will
prompt you to install one of the various modules that provide this support. If enabled,
you can use the arrow keys to scroll through previous commands and use standard terminal
shortcuts for editing. There are currently four options:

=item 1

=for code :lang<shell>
    zef install Terminal::LineEditor

=item 2

=for code :lang<shell>
    zef install Linenoise

This requires a working C<C> toolchain.

=item 3

=for code :lang<shell>
    zef install Readline

This requires an installation of the C<Readline> development library.

=item 4

An alternative for UNIX-like systems is to install C<rlwrap>. This can
be done on Debian-ish systems by running:

=for code :lang<shell>
sudo apt-get install rlwrap

And then use it to invoke the C<REPL>:

=for code :lang<shell>
rlwrap raku


=end pod
