=begin pod

=TITLE class Telemetry::Period

=SUBTITLE Performance data over a period

    =begin code :preamble<class Telemetry { }>
    class Telemetry::Period is Telemetry { }
    =end code

B<Note: > This class is a Rakudo-specific feature and not standard PerlÂ 6.

=begin code
# basic usage
use Telemetry;
my $t0 = Telemetry.new;
# execute some code
my $t1 = Telemetry.new;
my $period = $t1 - $t0;  # creates Telemetry::Period object
say "Code took $period (cpu / wallclock) microseconds to execute";
=end code

A C<Telemetry::Period> object contains the difference between two C<Telemetry>
objects.  It is generally not created by calling .new, but it can be if needed:
it takes "cpu-user", "cpu-sys" and "wallclock" as named parameters.

This page is quite a subset of how C<Telemetry::Period> can do. Because it
inherits from C<Telemetry>, more attributes about this class, which are really
practical, can be found at L<Telemetry|/type/Telemetry>.

=head1 Methods

=head2 method perl

    multi method perl( --> Str)

Returns a Perlish representation of the C<Telemetry::Period> object.

=head2 method cpus

    method cpus( --> Rat)

Returns the number of CPUs that were in full use on average in this period
(basically L<cpu> divided by L<wallclock>).

=head2 method utilization

    method utilization( --> Rat)

Returns the % of CPUs that were used on average in this period.

=end pod

# vim: expandtab softtabstop=4 shiftwidth=4 ft=perl6
