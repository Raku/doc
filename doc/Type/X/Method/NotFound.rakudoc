=begin pod :kind("Type") :subkind("class") :category("exception")

=TITLE class X::Method::NotFound

=SUBTITLE Error due to calling a method that isn't there

    class X::Method::NotFound is Exception {}

Thrown when the user tries to call a method that isn't there.

For example

=for code
1.no-such

throws

=for code :lang<text>
No such method 'no-such' for invocant of type 'Int'

=head1 Methods

=head2 method method

    method method(--> Str:D)

Returns the method name that was invoked.

=head2 method typename

    method typename(--> Str:D)

Returns the name of the invocant type.

=head2 method private

    method private(--> Bool:D)

Returns C<True> for private methods, and C<False> for public methods.

=head2 method addendum

    method addendum(--> Str:D)

Returns additional explanations or hints.

I<Note>: C<addendum> was introduced in Rakudo 2019.03.

=end pod
