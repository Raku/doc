=begin pod :kind("Type") :subkind("class") :category("exception")

=TITLE class X::Bind::Slice

=SUBTITLE Error due to binding to a slice

    class X::Bind::Slice is Exception {}

When you try to bind to an array or hash slice:

    my @a; @a[0, 1] := [42];
    CATCH { default { put .^name, ': ', .Str } };
    # OUTPUT: «X::Bind::Slice: Cannot bind to Array slice␤»

and

    my %h; %h<a b> := {};
    CATCH { default { put .^name, ': ', .Str } };
    # OUTPUT: «X::Bind::Slice: Cannot bind to Hash slice␤»

you get an exception of type C<::Bind::Slice>.

=head1 Methods

=head2 method type

    method type(X::Bind::Slice:D:)

returns the type object of the thing that you tried to slice-bind, for example
L<Array|/type/Array>, L<List|/type/List> or L<Hash|/type/Hash>.

=end pod
