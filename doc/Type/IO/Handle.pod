=begin pod

=TITLE class IO::Handle

=SUBTITLE Opened file or stream

   class IO::Handle does IO { }

=head1 Methods

=head2 method get

Reads a single line from the input stream (usually the Standard Input or a file).

Read one line from the standard input:

    $*IN.get;

Read one line from a file:

    my $fh = open 'filename';
    my $line = $fh.get;


=head2 method getc

Read a single character from the input stream.

=head2 method eof

Returns L<Bool::True> if the read operations have exhausted the content of the file.

=head2 method lines

    method lines($limit = Inf)

Return a lazy list of the file's lines read via L<get>, limited to C<$limit> lines.

    =for code :allow<B>
    my @data;
    my $data-file = open 'readings.csv'
    for B<$data-file.lines> -> $line {
        @data.push($line.split(','))
    }

=head2 method words

    method words($count = Inf)

Return a lazy list of the file's words (separated on whitespace), limited
to C<$count> words.

    =for code :allow<B>
    my %dict;
    ++%dict{$_} for $*IN.words;
    say "Most common words: ", %dict.sort(*.value).reverse.[^5];

=head2 method print

    method print(*@text --> Bool)

Text writing; writes the given C<@text> to the filehandle.

    my $fh = open 'path/to/file', :w;
    $fh.print("some text\n");
    $fh.close;

=head2 method read

    method read(IO::Handle:D: Int(Cool:D) $bytes --> Blob)

Binary reading; reads and returns C<$bytes> bytes from the handle

=head2 method write

    method write(IO::Handle:D: Blob:D $buf)

Binary writing; writes C<$buf> to the filehandle.

=head2 method seek

     method seek(IO::Handle:D: Int:D $offset, Int:D $whence)

Move the file pointer (that is the position at which any subsequent read
or write operations will begin,) to the byte position specified by
C<$offset> relative to the location specified by C<$whence> which may be
one of:

=item 0

The beginning of the file.

=item 1

The current position in the file.

=item 2

The end of the file.

=head2 method tell

    method tell(IO::Handle:D: --> Int)

Return the current position of the file pointer in bytes.

=head2 method ins

    method ins(IO::Handle:D: --> Int)

Return the number of lines read from the file.

=head2 method slurp-rest

    multi method slurp-rest(IO::Handle:D: :$bin! --> Buf)
    multi method slurp-rest(IO::Handle:D: :$enc --> Str)

Return the remaining content of the file from the current file position
(which may have been set by previous reads or by C<seek>.)  If the
adverb C<:bin> is provided a L<Buf> will be returned,
otherwise the return will be a C<Str> with the optional encoding C<:enc>.

=head2 method close

Will close a previously opened filehandle.

    $fh.close;

=head1 Related roles and classes

See also the related role L<IO> and the related class L<IO::Path>.

=end pod
