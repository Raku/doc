=begin pod :kind("Type") :subkind("class") :category("domain-specific")

=TITLE class CompUnit::Repository::Unknown

=SUBTITLE CompUnit::Repository::Unknown

=for code :preamble<role CompUnit::Repository {};>
class CompUnit::Repository::FileSystem
    does CompUnit::Repository
    { }

A L<C<CompUnit::Repository>|/type/CompUnit::Repository> placeholder that is used
when the type of the Repository is unknown.
in development situations. This is what is used by C<-I .> / C<-I lib> (which are
actually C<-I file#.> and C<-I file#lib>) or C<use lib "."> / C<use lib "lib">.
Unlike L<C<CompUnit::Repository::Installation>|/type/CompUnit::Repository::Installation>, this represents a single distribution.

=head1 Methods

=head2 method need

=for code :method :preamble<method !precomp-stores() {...};>
method need(
    CompUnit::DependencySpecification $spec,
    CompUnit::PrecompilationRepository $precomp?,
    CompUnit::PrecompilationStore :@precomp-stores
    --> CompUnit:D)

This class passes any requests up the repository chain, and does not resolve them itself.

=head2 method loaded

    method loaded(--> Iterable:D)

Always returns an empty L<C<Iterable>|/type/Iterable>.

=end pod
