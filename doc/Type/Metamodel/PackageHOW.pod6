=begin pod

=TITLE class Metamodel::PackageHOW

=SUBTITLE Metaobject representing a Perl 6 package.

    class Metamodel::PackageHOW
        does Metamodel::Naming
        does Metamodel::Documenting
        does Metamodel::Stashing
        does Metamodel::TypePretense
        does Metamodel::MethodDelegation { }

C<Metamodel::PackageHOW> is the meta class behind the C<package> keyword.

    package P {}
    say P.HOW ~~ Metamodel::PackageHOW;  # OUTPUT: «True␤»

=head1 Methods

C<Metamodel::PackageHOW> provides a number of internal methods
(C<archetypes>, C<new>, C<new_type>, C<compose> and C<is_composed>).
Of these, only C<new_type> is documented below.

=head2 new_type

    method new_type(:$name = '<anon>', :$repr, :$ver, :$auth)

For example, the following code declares two packages, C<A> and C<B>,
where C<B> is declared via the meta model:

=for code :skip-test
package  A:ver<0.1>:auth<somebody> {}
constant B := Metamodel::PackageHOW.new_type(name => 'B',
                                             ver  => v0.1,
                                             auth => 'somebody');

=end pod
