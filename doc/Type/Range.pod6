=begin pod

=TITLE class Range

=SUBTITLE Interval of ordered values

    class Range is Iterable does Positional { ... }

Ranges serve two main purposes: to generate lists of consecutive
numbers or strings, and to act as a matcher to check if a number
or string is within a certain range.

Ranges are constructed using one of the four possible range operators,
which consist of two dots, and optionally a caret which indicates that
the endpoint marked with it is excluded from the range.

    1 .. 5  # 1 <= $x <= 5
    1^.. 5  # 1 <  $x <= 5
    1 ..^5  # 1 <= $x <  5
    1^..^5  # 1 <  $x <  5

The caret is also a prefix operator for constructing numeric ranges
starting from zero:

    ^$x     # same as 0 ..^ $x.Numeric

Iterating a range (or calling the C<list> method) uses the same semantics as
the C<++> prefix and postfix operators, i.e., it calls the C<succ> method on
the start point, and then the generated elements.

Ranges always go from small to larger elements; if the start point is bigger
than the end point, the range is considered empty.

    for 1..5 { .say }       # five iterations
    ('a' ^..^ 'f').list     # 'b', 'c', 'd', 'e'
    5 ~~ ^5;                # False
    4.5 ~~ 0..^5            # True
    (1.1..5).list;          # (1.1, 2.1, 3.1, 4.1)

Use the C<...> sequence operator to produce lists of elements that
go from larger to smaller values, or to use offsets other than
increment-by-1.

Use C<Inf> or C<*> (Whatever) to indicate an end point to be open-ended.

    for 1..* { .say }       # start from 1, continue until stopped
    for 1..Inf { .say }     # the same

=head1 Methods

=head2 method min

    method min(Range:D:)

Returns the start point of the range.

=head2 method excludes-min

    method excludes-min(Range:D:) returns Bool:D

Returns C<True> if the start point is excluded from the range, and C<False>
otherwise.

=head2 method max

    method max(Range:D:)

Returns the end point of the range.

=head2 method excludes-max

    method excludes-max(Range:D:) returns Bool:D

Returns C<True> if the end point is excluded from the range, and C<False>
otherwise.

=head2 method bounds

    method bounds(Range:D:) returns Positional

Returns a list consisting of the start and end point.

=head2 method infinite

    method infinite(Range:D:) returns Bool:D

Returns C<True> if either end point was declared with C<Inf> or C<*>.

=head2 method is-int

    method is-int(Range:D:) returns Bool:D

Returns C<True> if both end points are C<Int> values.

=head2 method int-bounds

    method bounds(Range:D:) returns Positional

If the C<Range> is an integer range (as indicated by L<is-int>), then this
method returns a list with the first and last value it will iterate over
(taking into account L<excludes-min> and L<excludes-max>).  Returns a
Failure if it is not an integer range.


=head2 method minmax

Defined as:

    multi method minmax(Range:D:) returns List:D

If the C<Range> is an integer range (as indicated by L<is-int>), then this
method returns a list with the first and last value it will iterate over
(taking into account L<excludes-min> and L<excludes-max>). If the range is
not an integer range, the method will return a two element list containing
the start and end point of the range unless either of L<excludes-min> or
L<excludes-max> are C<True> in which case a L<Failure|/type/Failure> is returned.

    my $r1 = (1..5); my $r2 = (1^..5);
    say $r1.is-int, ', ', $r2.is-int;                 # True, True
    say $r1.excludes-min, ', ', $r2.excludes-min;     # False, True
    say $r1.minmax, ', ', $r2.minmax;                 # (1 5), (2 5)

    my $r3 = (1.1..5.2); my $r4 = (1.1..^5.2);
    say $r3.is-int, ', ', $r4.is-int;                 # False, False
    say $r3.excludes-max, ', ', $r4.excludes-max;     # False, True
    say $r3.minmax;                                   # (1.1 5.2)
    say $r4.minmax;                                   # Failure

=head2 method elems

    method elems(Range:D:) returns Numeric:D

Returns the number of elements in the range, e.g. when being iterated over,
or when used as a C<List>.  Returns Inf if either end point was specified
as C<Inf> or C<*>.

=head2 method list

    method list(Range:D:) returns List:D

Generates the list of elements that the range represents.

=head2 method flat

    method flat(Range:D:) returns List:D

Generates the list of elements that the range represents.

=head2 method pick

    method pick(Range:D:        ) returns Any:D
    method pick(Range:D: $number) returns Seq:D

Performs the same function as C<Range.list.pick>, but attempts to optimize
by not actually generating the list if it is not necessary.

=head2 method roll

    method roll(Range:D:        ) returns Any:D
    method roll(Range:D: $number) returns Seq:D

Performs the same function as C<Range.list.roll>, but attempts to optimize
by not actually generating the list if it is not necessary.

=end pod
